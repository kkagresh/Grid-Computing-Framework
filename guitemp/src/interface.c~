/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <string.h>
#include <stdio.h>

#include <gdk/gdkkeysyms.h>
#include <gtk/gtk.h>

#include "callbacks.h"
#include "interface.h"
#include "support.h"

#define NO_OF_CLIENTS 10

#define GLADE_HOOKUP_OBJECT(component,widget,name) \
  g_object_set_data_full (G_OBJECT (component), name, \
    gtk_widget_ref (widget), (GDestroyNotify) gtk_widget_unref)

#define GLADE_HOOKUP_OBJECT_NO_REF(component,widget,name) \
  g_object_set_data (G_OBJECT (component), name, widget)



void update_text_view()
{
	gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (textview1)), _("\tIP address:\n\tTask Id:\n\tTask Priority:\n\tStatus: Compiling/Executing/Error\n\tResult: \n\tTime of Exceution: \n\tError(if any): \n new"), -1);
	gtk_widget_show(textview1);
}


GtkWidget*
create_window1 (void)
{
  GtkWidget *window1;
  GtkWidget *vbox1;
  GtkWidget *label1;
  GtkWidget *scrolledwindow1;
  GtkWidget *viewport1;
  GtkWidget *filechooserwidget1;
  GtkWidget *hbox2;
  GtkWidget *check_button;
  GtkWidget *go_button;

  window1 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window1, 600, 500);
  gtk_window_set_title (GTK_WINDOW (window1), _("window1"));

  vbox1 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox1);
  gtk_container_add (GTK_CONTAINER (window1), vbox1);

  label1 = gtk_label_new (_("<b>Select your XML file </b>"));
  gtk_widget_show (label1);
  gtk_box_pack_start (GTK_BOX (vbox1), label1, FALSE, FALSE, 0);
  gtk_label_set_use_markup (GTK_LABEL (label1), TRUE);

  scrolledwindow1 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow1);
  gtk_box_pack_start (GTK_BOX (vbox1), scrolledwindow1, TRUE, TRUE, 0);

  viewport1 = gtk_viewport_new (NULL, NULL);
  gtk_widget_show (viewport1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow1), viewport1);

  filechooserwidget1 = gtk_file_chooser_widget_new (GTK_FILE_CHOOSER_ACTION_OPEN);
  gtk_widget_show (filechooserwidget1);
  gtk_container_add (GTK_CONTAINER (viewport1), filechooserwidget1);
  gtk_container_set_border_width (GTK_CONTAINER (filechooserwidget1), 4);

  hbox2 = gtk_hbox_new (FALSE, 0);
  gtk_widget_show (hbox2);
  gtk_box_pack_start (GTK_BOX (vbox1), hbox2, FALSE, FALSE, 0);

  check_button = gtk_button_new_with_mnemonic (_("Check"));
  gtk_widget_show (check_button);
  gtk_box_pack_start (GTK_BOX (hbox2), check_button, TRUE, TRUE, 0);

  go_button = gtk_button_new_with_mnemonic (_("Go"));
  gtk_widget_show (go_button);
  gtk_box_pack_start (GTK_BOX (hbox2), go_button, TRUE, TRUE, 0);

  g_signal_connect_after ((gpointer) window1, "destroy_event",
                          G_CALLBACK (on_window1_destroy_event),
                          NULL);
  g_signal_connect ((gpointer) filechooserwidget1, "file_activated",
                    G_CALLBACK (on_filechooserwidget1_file_activated),
                    NULL);
  g_signal_connect ((gpointer) check_button, "clicked",
                    G_CALLBACK (on_check_button_clicked),
                    NULL);
  g_signal_connect ((gpointer) go_button, "clicked",
                    G_CALLBACK (on_go_button_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window1, window1, "window1");
  GLADE_HOOKUP_OBJECT (window1, vbox1, "vbox1");
  GLADE_HOOKUP_OBJECT (window1, label1, "label1");
  GLADE_HOOKUP_OBJECT (window1, scrolledwindow1, "scrolledwindow1");
  GLADE_HOOKUP_OBJECT (window1, viewport1, "viewport1");
  GLADE_HOOKUP_OBJECT (window1, filechooserwidget1, "filechooserwidget1");
  GLADE_HOOKUP_OBJECT (window1, hbox2, "hbox2");
  GLADE_HOOKUP_OBJECT (window1, check_button, "check_button");
  GLADE_HOOKUP_OBJECT (window1, go_button, "go_button");

  return window1;
}

GtkWidget*
create_window2 (void)
{
  GtkWidget *window2;
  GtkWidget *vbox2;
  GtkWidget *label2;
  GtkWidget *button7;

  window2 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window2, 200, 200);
  gtk_window_set_title (GTK_WINDOW (window2), _("window2"));
  gtk_window_set_destroy_with_parent (GTK_WINDOW (window2), TRUE);

  vbox2 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox2);
  gtk_container_add (GTK_CONTAINER (window2), vbox2);

  label2 = gtk_label_new (_("label2"));
  gtk_widget_show (label2);
  gtk_box_pack_start (GTK_BOX (vbox2), label2, TRUE, TRUE, 0);

  button7 = gtk_button_new_with_mnemonic (_("Back"));
  gtk_widget_show (button7);
  gtk_box_pack_start (GTK_BOX (vbox2), button7, FALSE, FALSE, 0);

  g_signal_connect_after ((gpointer) window2, "destroy_event",
                          G_CALLBACK (on_window2_delete_event),
                          NULL);
  g_signal_connect_after ((gpointer) button7, "clicked",
                          G_CALLBACK (on_button7_clicked),
                          NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window2, window2, "window2");
  GLADE_HOOKUP_OBJECT (window2, vbox2, "vbox2");
  GLADE_HOOKUP_OBJECT (window2, label2, "label2");
  GLADE_HOOKUP_OBJECT (window2, button7, "button7");

  return window2;
}

GtkWidget*
create_window3 (void)
{
  
  GtkWidget *vbox3;
  GtkWidget *combobox1;
  GtkWidget *scrolledwindow2;
  
  GtkWidget *update_button;
  

  window3 = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  gtk_widget_set_size_request (window3, 600, 500);
  gtk_window_set_title (GTK_WINDOW (window3), _("window3"));

  vbox3 = gtk_vbox_new (FALSE, 0);
  gtk_widget_show (vbox3);
  gtk_container_add (GTK_CONTAINER (window3), vbox3);

  combobox1 = gtk_combo_box_new_text ();
  gtk_widget_show (combobox1);
  gtk_box_pack_start (GTK_BOX (vbox3), combobox1, FALSE, TRUE, 4);
  gtk_widget_set_size_request (combobox1, -1, 50);
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox1), _("Select a client: "));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox1), _("Client #1"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox1), _("Client #2"));
  gtk_combo_box_append_text (GTK_COMBO_BOX (combobox1), _("Client #3"));

  scrolledwindow2 = gtk_scrolled_window_new (NULL, NULL);
  gtk_widget_show (scrolledwindow2);
  gtk_box_pack_start (GTK_BOX (vbox3), scrolledwindow2, TRUE, TRUE, 0);
  gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (scrolledwindow2), GTK_SHADOW_IN);

  textview1 = gtk_text_view_new ();
  gtk_widget_show (textview1);
  gtk_container_add (GTK_CONTAINER (scrolledwindow2), textview1);
  gtk_text_view_set_editable (GTK_TEXT_VIEW (textview1), FALSE);
  gtk_text_view_set_pixels_above_lines (GTK_TEXT_VIEW (textview1), 7);
  gtk_text_view_set_pixels_below_lines (GTK_TEXT_VIEW (textview1), 1);
  gtk_text_view_set_right_margin (GTK_TEXT_VIEW (textview1), 1);
  

gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (textview1)), _("\tIP address:\n\tTask Id:\n\tTask Priority:\n\tStatus: Compiling/Executing/Error\n\tResult: \n\tTime of Exceution: \n\tError(if any): \n"), -1);

  update_button = gtk_button_new_with_mnemonic (_("Refresh"));
  gtk_widget_show (update_button);
  gtk_box_pack_start (GTK_BOX (vbox3), update_button, FALSE, TRUE, 1);

  g_signal_connect ((gpointer) combobox1, "changed",
                    G_CALLBACK (on_combobox1_changed),
                    NULL);
  g_signal_connect ((gpointer) update_button, "clicked",
                    G_CALLBACK (on_update_button_clicked),
                    NULL);

  /* Store pointers to all widgets, for use by lookup_widget(). */
  GLADE_HOOKUP_OBJECT_NO_REF (window3, window3, "window3");
  GLADE_HOOKUP_OBJECT (window3, vbox3, "vbox3");
  GLADE_HOOKUP_OBJECT (window3, combobox1, "combobox1");
  GLADE_HOOKUP_OBJECT (window3, scrolledwindow2, "scrolledwindow2");
  GLADE_HOOKUP_OBJECT (window3, textview1, "textview1");
  GLADE_HOOKUP_OBJECT (window3, update_button, "update_button");

  return window3;
}

