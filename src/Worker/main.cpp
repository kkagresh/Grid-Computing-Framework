/*
 * Initial main.c file generated by Glade. Edit as required.
 * Glade will not overwrite this file.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <gtk/gtk.h>
#include <pthread.h>

#include "interface.h"
#include "support.h"
#include "client.cpp"

int
main (int argc, char *argv[])
{
  GtkWidget *window1;

  

#ifdef ENABLE_NLS
  bindtextdomain (GETTEXT_PACKAGE, PACKAGE_LOCALE_DIR);
  bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
  textdomain (GETTEXT_PACKAGE);
#endif
     
    GThread   *thread;
    GError    *error = NULL;
	pthread_t worker;
	   
  
    if( ! g_thread_supported() )
        g_thread_init( NULL );
   
    gdk_threads_init();
 
    gdk_threads_enter();
 
    gtk_init( &argc, &argv );
    
    thread = g_thread_create( thread_func, (gpointer)NULL,FALSE, &error );

    if( ! thread )
    {
        g_print( "Error: %s\n", error->message );
        return( -1 );
    }

    window1 = create_window1 ();
    gtk_widget_show (window1);

    gdk_threads_add_timeout( 3000, cb_timeout, (gpointer)NULL );
    gdk_threads_add_timeout( 2000, exec_timeout, (gpointer)NULL );


    pthread_t client_starter_thread;
    pthread_create(&client_starter_thread, NULL, &(client_starter), NULL);
 
    pthread_create(&worker,NULL,&updater,NULL);
    gtk_main();
 
    gdk_threads_leave();

    pthread_join(worker,NULL);
    pthread_join(client_starter_thread, NULL);
    return( 0 );
}
